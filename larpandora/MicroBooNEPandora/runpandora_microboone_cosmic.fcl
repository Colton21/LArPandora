##
## Example fcl file for LArPandoraInterface
## (Assumes that input ROOT file contains reconstructed hits) 
##

#include "services_microboone.fcl"
#include "pandoramodules_microboone.fcl"

process_name: MicroBooNEPandora

services:
{
  TFileService: { fileName: "ntuple.root" }
  message:      @local::standard_debug
                @table::microboone_services
}

### Define input file format
source:
{
  module_type: RootInput
  skipEvents : 0
}

### Define the modules and create chains
physics:
{
  producers: 
  {  
    pandora:    @local::microboone_pandoracosmic
  }

  analyzers:
  { 
    pandorana: {module_type: PFParticleAnalysis}
    pandorahits: {module_type: PFParticleHitDumper}
    pandoramonitoring:  {module_type: PFParticleMonitoring}
    pandoratracks: {module_type: PFParticleTrackAna}
  }

  ### Set up a chain of Producer modules
  reco: [ pandora ]

  ### Set up a chain of Analyzer modules
  ana: [ pandorana, pandorahits, pandoratracks, pandoramonitoring ]

  ### Set up the trigger paths (these are the modules that modify the event)
  trigger_paths: [ reco ] 

  ### Set up the end paths (these are the modules that do not modify the event)
  end_paths: [ ana ] 
}

### Configure the Producer modules
physics.producers.pandora.EnableMonitoring: true

### Configure the Analyzer modules
physics.analyzers.pandoramonitoring.UseDaughterPFParticles:  true
physics.analyzers.pandoramonitoring.HitFinderModule: "gaushit"
physics.analyzers.pandoramonitoring.SpacePointModule: "pandora"
physics.analyzers.pandoramonitoring.PFParticleModule: "pandora"
physics.analyzers.pandoramonitoring.TrackModule: "pandora"
physics.analyzers.pandoramonitoring.PrintDebug: true
physics.analyzers.pandoramonitoring.RecursiveMatching: true
physics.analyzers.pandorahits.HitFinderModule: "gaushit"
physics.analyzers.pandorahits.SpacePointModule: "pandora"
physics.analyzers.pandorahits.PFParticleModule: "pandora"
physics.analyzers.pandorahits.TrackModule: "pandora"
physics.analyzers.pandorana.SpacePointModule: "pandora"
physics.analyzers.pandorana.PFParticleModule: "pandora"
physics.analyzers.pandorana.TrackModule: "pandora"
physics.analyzers.pandorana.PrintDebug: true
physics.analyzers.pandoratracks.TrackModule: "pandora"